En este video vamos a hacer un pequeño recorrido a la implementación que se realizó para el taller de RMI. Para comenzar debemos decir que se usó Docker para crear y gestionar contenedores en los cuales se ejecuta el codigo respectivo, es decir, cliente o servidor. En específico se usó Docker Compose, una herramienta que extiende las funcionalidades base de Docker para poder gestionar a la vez múltiples contenedores pertenecientes a una aplicación. Una funcionalidad especialmente importante que nos provee Docker Compose es la de crear registros DNS que permiten llevar a cabo una comunicación IP entre contenedores pertenecientes a una misma aplicación, para esto, es necesario definir cada componente de la aplicación como un servicio. Dados los recursos de cómputo disponibles, se recurrió a este mecanismo para llevar a cabo la comunicación entre los diferentes componentes de la aplicación.

En primer lugar se probará que pueda llevarse a cabo una comunicación entre los contenedores haciendo uso del comando ping y teniendo presentes los registros DNS de los que se ha venido hablando, esto servirá como una prueba de concepto para verificar que si puede llevarse a cabo la comunicación haciendo uso de las redes en Compose.

Una vez comprobada la posibilidad de comunicación entre los contenedores, se procederá a mostrar el funcionamiento de la aplicación. Es importante aquí recordar que en la aplicación existen dos operaciones: Consultar y Adquirir. La respuesta al método “consulta” remoto debe ser el listado de los productos disponibles. En el caso del método “adquisición”, se deben descontar los productos del inventario. 

En este caso, para mostrar que efectivamente se descuentan del inventario los elementos comprados, se muestra el archivo que tiene los articulos que se tiene en la aplicación.